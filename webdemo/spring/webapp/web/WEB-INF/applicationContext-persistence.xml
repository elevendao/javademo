<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

<!-- <import resource="applicationContext-propertyConfigurer.xml" /> -->

	<bean id="propertyConfigurer"
		     class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		   <property name="locations">
		     <list>
		       <value>/WEB-INF/system.properties</value>
		       <value>/WEB-INF/jdbc.properties</value>
		       <value>/WEB-INF/search.properties</value>
		     </list>
		   </property>
		   
     </bean>

	<bean id="dataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close" lazy-init="true">
		<qualifier value="dataSource"/>
		<property name="uniqueResourceName">              
			<value>dataSource</value>          
		</property>          
		<property name="xaDataSourceClassName">              
			<value>oracle.jdbc.xa.client.OracleXADataSource</value>          
		</property>        
		<property name="xaProperties">              
			<props>                       
				<prop key="URL">${jdbc.jdbcUrl}</prop>                  
				<prop key="user">${jdbc.user}</prop>                  
				<prop key="password">${jdbc.password}</prop>
			</props>          
		</property>            
		<property name="poolSize"><value>${manager.initialPoolSize}</value></property>              
		<property name="maxPoolSize"><value>${manager.maxPoolSize}</value></property>   
		<property name="testQuery">  <value>select 1 from dual</value></property> 
	</bean>

	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
	<!--  when close is called, should we force transactions to terminate or not? -->
	<property name="forceShutdown"><value>true</value></property>
	</bean>

	
	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
	    <property name="transactionTimeout"><value>300</value></property>
	</bean>
	
	<!-- Configure the Spring framework to use JTA transactions from Atomikos -->
	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
	
		<property name="transactionManager"><ref bean="atomikosTransactionManager"  /></property>
		<property name="userTransaction"><ref bean="atomikosUserTransaction"  /></property>
	</bean>
	<bean id="lobHandler"
		class="org.springframework.jdbc.support.lob.DefaultLobHandler" />
    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="WEB-INF/sqlMapConfig.xml" />
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
    
</beans>